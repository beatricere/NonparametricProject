geom_line(aes(y = Precisione.EM, color = "EM"), size = 1.5) +
#geom_line(aes(y = Precisione.Mean, color = "Mean")) +
labs(title = "VI and EM Median Precision",
x = "Noise",
y = "Precision (%)",
color = "Methods") +
scale_color_manual(values = c("VI" = "blue", "EM" = "red")) +
theme_minimal()
# Create a line plot for the three columns
ggplot(data, aes(x = Rumore)) +
geom_line(aes(y = Precisione.VI, color = "VI"), size = 1.5) +
geom_line(aes(y = Precisione.EM, color = "EM"), size = 1.5) +
#geom_line(aes(y = Precisione.Mean, color = "Mean")) +
labs(title = "VI and EM Median Precision",
x = "Noise",
y = "Precision (%)",
color = "Methods") +
scale_color_manual(values = c("VI" = "blue", "EM" = "red")) +
theme_minimal()+
theme(
text = element_text(size = 18),            # Increase all text size
axis.title = element_text(size = 18),      # Axis titles size
axis.text = element_text(size = 16),       # Axis tick labels size
plot.title = element_text(size = 20),      # Plot title size
legend.title = element_text(size = 18),    # Legend title size
legend.text = element_text(size = 18)      # Legend text size
)
# Load necessary libraries
library(ggplot2)
library(reshape2)
# Load the CSV file (adjust the file path accordingly)
data <- read.csv("C:\\Users\\jclaz\\Downloads\\df_revisori.csv")
# Filter columns for means (mu0_) and standard deviations (sigma20_)
means_cols <- grep("mu0_", names(data), value = TRUE)
std_cols <- grep("sigma20_", names(data), value = TRUE)
# Melt data for plotting means
means_data <- melt(data[, c("Revisore", means_cols)], id.vars = "Revisore")
# Plot boxplot for means
ggplot(means_data, aes(x = variable, y = value)) +
geom_boxplot() +
labs(title = "Boxplot of Means",
x = "Categories",
y = "Mean Values") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Plot boxplot for means
ggplot(means_data, aes(x = variable, y = value)) +
geom_boxplot() +
labs(title = "Boxplot of Means",
x = "Categories",
y = "Mean Values") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
theme(
text = element_text(size = 18),            # Increase all text size
axis.title = element_text(size = 18),      # Axis titles size
axis.text = element_text(size = 16),       # Axis tick labels size
plot.title = element_text(size = 20),      # Plot title size
legend.title = element_text(size = 18),    # Legend title size
legend.text = element_text(size = 18)      # Legend text size
)
# Melt data for plotting standard deviations
std_data <- melt(data[, c("Revisore", std_cols)], id.vars = "Revisore")
# Plot boxplot for standard deviations
ggplot(std_data, aes(x = variable, y = value)) +
geom_boxplot() +
labs(title = "Boxplot of Standard Deviations",
x = "Categories",
y = "Standard Deviation Values") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
theme(
text = element_text(size = 18),            # Increase all text size
axis.title = element_text(size = 18),      # Axis titles size
axis.text = element_text(size = 16),       # Axis tick labels size
plot.title = element_text(size = 20),      # Plot title size
legend.title = element_text(size = 18),    # Legend title size
legend.text = element_text(size = 18)      # Legend text size
)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("C:/Users/jclaz/OneDrive/Desktop/NL3_la_vendetta/questionari_silvia/colloqui_linee.R", echo=TRUE)
source("C:/Users/jclaz/OneDrive/Desktop/NL3_la_vendetta/questionari_silvia/colloqui_linee.R", echo=TRUE)
source("C:/Users/jclaz/OneDrive/Desktop/NL3_la_vendetta/questionari_silvia/colloqui_linee.R", echo=TRUE)
source("C:/Users/jclaz/OneDrive/Desktop/NL3_la_vendetta/questionari_silvia/colloqui_linee.R", echo=TRUE)
source("C:/Users/jclaz/OneDrive/Desktop/NL3_la_vendetta/questionari_silvia/colloqui_linee.R", echo=TRUE)
source("C:/Users/jclaz/OneDrive/Desktop/NL3_la_vendetta/questionari_silvia/colloqui_linee.R", echo=TRUE)
source("C:/Users/jclaz/OneDrive/Desktop/NL3_la_vendetta/questionari_silvia/colloqui_linee.R", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
install.packages('viridis')
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("C:/Users/jclaz/OneDrive/Desktop/NL3_la_vendetta/questionari_silvia/colloqui_linee.R", echo=TRUE)
source("C:/Users/jclaz/OneDrive/Desktop/NL3_la_vendetta/questionari_silvia/colloqui_linee.R", echo=TRUE)
source("C:/Users/jclaz/OneDrive/Desktop/NL3_la_vendetta/questionari_silvia/colloqui_linee.R", echo=TRUE)
source("C:/Users/jclaz/OneDrive/Desktop/NL3_la_vendetta/questionari_silvia/colloqui_linee.R", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
View(data_long)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("C:/Users/jclaz/OneDrive/Desktop/NL3_la_vendetta/questionari_silvia/colloqui_linee.R", echo=TRUE)
source("C:/Users/jclaz/OneDrive/Desktop/NL3_la_vendetta/questionari_silvia/colloqui_linee.R", echo=TRUE)
source("C:/Users/jclaz/OneDrive/Desktop/NL3_la_vendetta/questionari_silvia/colloqui_linee.R", echo=TRUE)
source("C:/Users/jclaz/OneDrive/Desktop/NL3_la_vendetta/questionari_silvia/colloqui_linee.R", echo=TRUE)
source("C:/Users/jclaz/OneDrive/Desktop/NL3_la_vendetta/questionari_silvia/colloqui_linee.R", echo=TRUE)
source("C:/Users/jclaz/OneDrive/Desktop/NL3_la_vendetta/questionari_silvia/colloqui_linee.R", echo=TRUE)
source("C:/Users/jclaz/OneDrive/Desktop/NL3_la_vendetta/questionari_silvia/colloqui_linee.R", echo=TRUE)
source("C:/Users/jclaz/OneDrive/Desktop/NL3_la_vendetta/questionari_silvia/colloqui_linee.R", echo=TRUE)
source("C:/Users/jclaz/Downloads/data_exploration.R", echo=TRUE)
source("C:/Users/jclaz/Downloads/data_exploration.R", echo=TRUE)
source("C:/Users/jclaz/Downloads/data_exploration.R", echo=TRUE)
wbc_men <- men$wbc
wbc_women <- women$wbc
wilcox.test(wbc_men, wbc_women)
quantreg_model <- rq(bacteremia ~ wbc, data = bacteremia, tau = c(0.25, 0.5, 0.75))
summary(quantreg_model)
set.seed(123)
rf_model <- randomForest(bacteremia ~ ., data = bacteremia, importance = TRUE, ntree = 500)
ggplot(bacteremia, aes(x = wbc, fill = factor(bacteremia))) +
geom_density(alpha = 0.5) +
labs(title = "Distribuzione di WBC per Batteriemia", x = "WBC", y = "Densità", fill = "Batteriemia")
cor_test_results <- cor.test(bacteremia$wbc, bacteremia$age, method = "spearman")
print(cor_test_results)
View(bacteremia)
plot(bacteremia$wbc, bacteremia$age, main = "Correlazione tra WBC e Età", xlab = "WBC", ylab = "Età", col = ifelse(bacteremia$bacteremia == 1, "red", "blue"))
abline(lm(bacteremia$age ~ bacteremia$wbc), col = "black")
kruskal.test(wbc ~ cut(age, breaks = c(0, 20, 40, 60, 80, 100), labels = c("0-20", "20-40", "40-60", "60-80", "80+")), data = bacteremia)
rm(list = ls())
# Load the data
data <- read.csv("C:\Users\jclaz\OneDrive\Documenti\GitHub\NonparametricProject\Data\bacteremia.csv")  # funziona per tutti se la wd è settata giusta
# Load the data
data <- read.csv("C:\\Users\\jclaz\\OneDrive\\Documenti\\GitHub\\NonparametricProject\\Data\\bacteremia.csv")  # funziona per tutti se la wd è settata giusta
WBC <- data$wbc
Bacteremia <- data$bacteremia
# Creare i gruppi
WBC1 <- WBC[Bacteremia == 1] # Pazienti con batteriemia
WBC2 <- WBC[Bacteremia == 0] # Pazienti senza batteriemia
n1 <- length(WBC1)
n2 <- length(WBC2)
n <- length(WBC)
set.seed(09122024)
# Sottogruppi: pazienti con e senza batteriemia
group1 <- data$wbc[data$bacteremia == 1]  # Pazienti con batteriemia
group2 <- data$wbc[data$bacteremia == 0]  # Pazienti senza batteriemia
# Wilcoxon Rank Sum Test (Mann-Whitney U-Test)
test_result <- wilcox.test(group1, group2, paired = FALSE) # paired = TRUE sarebbe per dati accoppiati
print(test_result)
# Comando equivalente più sintetico
test_result <- wilcox.test(wbc ~ bacteremia, data = data)
print(test_result)
# Interpretazione
if (test_result$p.value < 0.05) {
cat("I livelli di WBC differiscono significativamente tra i pazienti con e senza batteriemia (p =", test_result$p.value, ")\n")
} else {
cat("Non ci sono differenze significative nei livelli di WBC tra i pazienti con e senza batteriemia (p =", test_result$p.value, ")\n")
}
rm(list = ls())
# Load the data
data <- read.csv("C:\\Users\\jclaz\\OneDrive\\Documenti\\GitHub\\NonparametricProject\\Data\\bacteremia.csv")  # funziona per tutti se la wd è settata giusta
set.seed(09122024)
# Sottogruppi: pazienti con e senza batteriemia
group1 <- data$alat[data$bacteremia == 1]  # Pazienti con batteriemia
group2 <- data$alat[data$bacteremia == 0]  # Pazienti senza batteriemia
# Comando equivalente più sintetico
test_result <- wilcox.test(alat ~ bacteremia, data = data)
print(test_result)
rm(list = ls())
# Load the data
data <- read.csv("C:\\Users\\jclaz\\OneDrive\\Documenti\\GitHub\\NonparametricProject\\Data\\bacteremia.csv")  # funziona per tutti se la wd è settata giusta
set.seed(09122024)
# Sottogruppi: pazienti con e senza batteriemia
group1 <- data$alat[data$bacteremia == 1]  # Pazienti con batteriemia
group2 <- data$alat[data$bacteremia == 0]  # Pazienti senza batteriemia
# Wilcoxon Rank Sum Test (Mann-Whitney U-Test)
test_result <- wilcox.test(group1, group2, paired = FALSE) # paired = TRUE sarebbe per dati accoppiati
print(test_result)
# Comando equivalente più sintetico
test_result <- wilcox.test(alat ~ bacteremia, data = data)
print(test_result)
# Interpretazione
if (test_result$p.value < 0.05) {
cat("I livelli di WBC differiscono significativamente tra i pazienti con e senza batteriemia (p =", test_result$p.value, ")\n")
} else {
cat("Non ci sono differenze significative nei livelli di WBC tra i pazienti con e senza batteriemia (p =", test_result$p.value, ")\n")
}
source("~/GitHub/NonparametricProject/Code/rank_test_senza_imputazione.R", echo=TRUE)
rm(list = ls())
# Load the data
data <- read.csv("C:\\Users\\jclaz\\OneDrive\\Documenti\\GitHub\\NonparametricProject\\Data\\bacteremia.csv")  # funziona per tutti se la wd è settata giusta
set.seed(09122024)
# Comando equivalente più sintetico
test_result <- wilcox.test(alat ~ bacteremia, data = data)
print(test_result)
# Interpretazione
if (test_result$p.value < 0.05) {
cat("I livelli di WBC differiscono significativamente tra i pazienti con e senza batteriemia (p =", test_result$p.value, ")\n")
} else {
cat("Non ci sono differenze significative nei livelli di WBC tra i pazienti con e senza batteriemia (p =", test_result$p.value, ")\n")
}
# Interpretazione
if (test_result$p.value < 0.05) {
cat("I livelli di WBC differiscono significativamente tra le donne con e senza batteriemia (p =", test_result$p.value, ")\n")
} else {
cat("Non ci sono differenze significative nei livelli di WBC tra le donne con e senza batteriemia (p =", test_result$p.value, ")\n")
}
data_male <- subset(data, sex == "male")
data_female <- subset(data, sex == "female")
print(test_result)
# Comando equivalente più sintetico
test_result <- wilcox.test(alat ~ bacteremia, data = data_female)
set.seed(09122024)
set.seed(09122024)
# Comando equivalente più sintetico
test_result <- wilcox.test(alat ~ bacteremia, data = data_male)
print(test_result)
# Interpretazione
if (test_result$p.value < 0.05) {
cat("I livelli di WBC differiscono significativamente tra gli uomini con e senza batteriemia (p =", test_result$p.value, ")\n")
} else {
cat("Non ci sono differenze significative nei livelli di WBC tra gli uomini con e senza batteriemia (p =", test_result$p.value, ")\n")
}
rm(list = ls())
# Load the data
data <- read.csv("C:\\Users\\jclaz\\OneDrive\\Documenti\\GitHub\\NonparametricProject\\Data\\bacteremia.csv")  # funziona per tutti se la wd è settata giusta
set.seed(09122024)
# Comando equivalente più sintetico
test_result <- wilcox.test(alat ~ bacteremia, data = data)
print(test_result)
# Interpretazione
if (test_result$p.value < 0.05) {
cat("I livelli di WBC differiscono significativamente tra i pazienti con e senza batteriemia (p =", test_result$p.value, ")\n")
} else {
cat("Non ci sono differenze significative nei livelli di WBC tra i pazienti con e senza batteriemia (p =", test_result$p.value, ")\n")
}
data_female <- subset(data, sex == "female")
data_male <- subset(data, sex == "male")
set.seed(09122024)
# Comando equivalente più sintetico
test_result <- wilcox.test(alat ~ bacteremia, data = data_female)
print(test_result)
# Interpretazione
if (test_result$p.value < 0.05) {
cat("I livelli di WBC differiscono significativamente tra le donne con e senza batteriemia (p =", test_result$p.value, ")\n")
} else {
cat("Non ci sono differenze significative nei livelli di WBC tra le donne con e senza batteriemia (p =", test_result$p.value, ")\n")
}
set.seed(09122024)
# Comando equivalente più sintetico
test_result <- wilcox.test(alat ~ bacteremia, data = data_male)
print(test_result)
# Interpretazione
if (test_result$p.value < 0.05) {
cat("I livelli di WBC differiscono significativamente tra gli uomini con e senza batteriemia (p =", test_result$p.value, ")\n")
} else {
cat("Non ci sono differenze significative nei livelli di WBC tra gli uomini con e senza batteriemia (p =", test_result$p.value, ")\n")
}
# Comando equivalente più sintetico
test_result <- wilcox.test(amy ~ bacteremia, data = data)
print(test_result)
# Interpretazione
if (test_result$p.value < 0.05) {
cat("I livelli di WBC differiscono significativamente tra i pazienti con e senza batteriemia (p =", test_result$p.value, ")\n")
} else {
cat("Non ci sono differenze significative nei livelli di WBC tra i pazienti con e senza batteriemia (p =", test_result$p.value, ")\n")
}
data_female <- subset(data, sex == "female")
data_male <- subset(data, sex == "male")
set.seed(09122024)
# Comando equivalente più sintetico
test_result <- wilcox.test(amy ~ bacteremia, data = data_female)
print(test_result)
# Interpretazione
if (test_result$p.value < 0.05) {
cat("I livelli di WBC differiscono significativamente tra le donne con e senza batteriemia (p =", test_result$p.value, ")\n")
} else {
cat("Non ci sono differenze significative nei livelli di WBC tra le donne con e senza batteriemia (p =", test_result$p.value, ")\n")
}
set.seed(09122024)
# Comando equivalente più sintetico
test_result <- wilcox.test(amy ~ bacteremia, data = data_male)
print(test_result)
# Interpretazione
if (test_result$p.value < 0.05) {
cat("I livelli di WBC differiscono significativamente tra gli uomini con e senza batteriemia (p =", test_result$p.value, ")\n")
} else {
cat("Non ci sono differenze significative nei livelli di WBC tra gli uomini con e senza batteriemia (p =", test_result$p.value, ")\n")
}
# Comando equivalente più sintetico
test_result <- wilcox.test(ap ~ bacteremia, data = data)
print(test_result)
# Interpretazione
if (test_result$p.value < 0.05) {
cat("I livelli di WBC differiscono significativamente tra i pazienti con e senza batteriemia (p =", test_result$p.value, ")\n")
} else {
cat("Non ci sono differenze significative nei livelli di WBC tra i pazienti con e senza batteriemia (p =", test_result$p.value, ")\n")
}
data_female <- subset(data, sex == "female")
data_male <- subset(data, sex == "male")
set.seed(09122024)
# Comando equivalente più sintetico
test_result <- wilcox.test(ap ~ bacteremia, data = data_female)
print(test_result)
# Interpretazione
if (test_result$p.value < 0.05) {
cat("I livelli di WBC differiscono significativamente tra le donne con e senza batteriemia (p =", test_result$p.value, ")\n")
} else {
cat("Non ci sono differenze significative nei livelli di WBC tra le donne con e senza batteriemia (p =", test_result$p.value, ")\n")
}
set.seed(09122024)
# Comando equivalente più sintetico
test_result <- wilcox.test(ap ~ bacteremia, data = data_male)
print(test_result)
# Interpretazione
if (test_result$p.value < 0.05) {
cat("I livelli di WBC differiscono significativamente tra gli uomini con e senza batteriemia (p =", test_result$p.value, ")\n")
} else {
cat("Non ci sono differenze significative nei livelli di WBC tra gli uomini con e senza batteriemia (p =", test_result$p.value, ")\n")
}
rm(list = ls())
# Load the data
data <- readRDS("../Data/bacteremia_no_NAs.rds")  # funziona per tutti se la wd è settata giusta
setwd("~/GitHub/NonparametricProject")
# Load the data
data <- readRDS("../Data/bacteremia_no_NAs.rds")  # funziona per tutti se la wd è settata giusta
rm(list = ls())
# Load the data
data <- readRDS("C:\\Users\\jclaz\\OneDrive\\Documenti\\GitHub\\NonparametricProject\\Data\\bacteremia_no_NAs.rds")  # funziona per tutti se la wd è settata giusta
set.seed(09122024)
# Comando equivalente più sintetico
test_result <- wilcox.test(alat ~ bacteremia, data = data)
print(test_result)
# Interpretazione
if (test_result$p.value < 0.05) {
cat("I livelli di WBC differiscono significativamente tra i pazienti con e senza batteriemia (p =", test_result$p.value, ")\n")
} else {
cat("Non ci sono differenze significative nei livelli di WBC tra i pazienti con e senza batteriemia (p =", test_result$p.value, ")\n")
}
data_female <- subset(data, sex == "female")
data_male <- subset(data, sex == "male")
set.seed(09122024)
# Comando equivalente più sintetico
test_result <- wilcox.test(alat ~ bacteremia, data = data_female)
print(test_result)
# Interpretazione
if (test_result$p.value < 0.05) {
cat("I livelli di WBC differiscono significativamente tra le donne con e senza batteriemia (p =", test_result$p.value, ")\n")
} else {
cat("Non ci sono differenze significative nei livelli di WBC tra le donne con e senza batteriemia (p =", test_result$p.value, ")\n")
}
set.seed(09122024)
# Comando equivalente più sintetico
test_result <- wilcox.test(alat ~ bacteremia, data = data_male)
print(test_result)
# Interpretazione
if (test_result$p.value < 0.05) {
cat("I livelli di WBC differiscono significativamente tra gli uomini con e senza batteriemia (p =", test_result$p.value, ")\n")
} else {
cat("Non ci sono differenze significative nei livelli di WBC tra gli uomini con e senza batteriemia (p =", test_result$p.value, ")\n")
}
# Comando equivalente più sintetico
test_result <- wilcox.test(amy ~ bacteremia, data = data)
print(test_result)
# Interpretazione
if (test_result$p.value < 0.05) {
cat("I livelli di WBC differiscono significativamente tra i pazienti con e senza batteriemia (p =", test_result$p.value, ")\n")
} else {
cat("Non ci sono differenze significative nei livelli di WBC tra i pazienti con e senza batteriemia (p =", test_result$p.value, ")\n")
}
data_female <- subset(data, sex == "female")
data_male <- subset(data, sex == "male")
set.seed(09122024)
# Comando equivalente più sintetico
test_result <- wilcox.test(amy ~ bacteremia, data = data_female)
print(test_result)
# Interpretazione
if (test_result$p.value < 0.05) {
cat("I livelli di WBC differiscono significativamente tra le donne con e senza batteriemia (p =", test_result$p.value, ")\n")
} else {
cat("Non ci sono differenze significative nei livelli di WBC tra le donne con e senza batteriemia (p =", test_result$p.value, ")\n")
}
set.seed(09122024)
# Comando equivalente più sintetico
test_result <- wilcox.test(amy ~ bacteremia, data = data_male)
print(test_result)
# Interpretazione
if (test_result$p.value < 0.05) {
cat("I livelli di WBC differiscono significativamente tra gli uomini con e senza batteriemia (p =", test_result$p.value, ")\n")
} else {
cat("Non ci sono differenze significative nei livelli di WBC tra gli uomini con e senza batteriemia (p =", test_result$p.value, ")\n")
}
# Comando equivalente più sintetico
test_result <- wilcox.test(ap ~ bacteremia, data = data)
print(test_result)
# Interpretazione
if (test_result$p.value < 0.05) {
cat("I livelli di WBC differiscono significativamente tra i pazienti con e senza batteriemia (p =", test_result$p.value, ")\n")
} else {
cat("Non ci sono differenze significative nei livelli di WBC tra i pazienti con e senza batteriemia (p =", test_result$p.value, ")\n")
}
data_female <- subset(data, sex == "female")
data_male <- subset(data, sex == "male")
set.seed(09122024)
# Comando equivalente più sintetico
test_result <- wilcox.test(ap ~ bacteremia, data = data_female)
print(test_result)
# Interpretazione
if (test_result$p.value < 0.05) {
cat("I livelli di WBC differiscono significativamente tra le donne con e senza batteriemia (p =", test_result$p.value, ")\n")
} else {
cat("Non ci sono differenze significative nei livelli di WBC tra le donne con e senza batteriemia (p =", test_result$p.value, ")\n")
}
set.seed(09122024)
# Comando equivalente più sintetico
test_result <- wilcox.test(ap ~ bacteremia, data = data_male)
print(test_result)
# Interpretazione
if (test_result$p.value < 0.05) {
cat("I livelli di WBC differiscono significativamente tra gli uomini con e senza batteriemia (p =", test_result$p.value, ")\n")
} else {
cat("Non ci sono differenze significative nei livelli di WBC tra gli uomini con e senza batteriemia (p =", test_result$p.value, ")\n")
}
